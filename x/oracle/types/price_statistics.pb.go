// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cascadia/oracle/v1/price_statistics.proto

package types

import (
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type PriceStatistics struct {
	// p360 defines avg Token Price of 360 days
	P360 github_com_cosmos_cosmos_sdk_types.Dec `protobuf:"bytes,1,opt,name=p360,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Dec" json:"p360"`
	// p180 defines avg Token Price of 180 days
	P180 github_com_cosmos_cosmos_sdk_types.Dec `protobuf:"bytes,2,opt,name=p180,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Dec" json:"p180"`
	// p180 defines avg Token Price of 90 days
	P90 github_com_cosmos_cosmos_sdk_types.Dec `protobuf:"bytes,3,opt,name=p90,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Dec" json:"p90"`
	// p30 defines avg Token Price of 30 days
	P30 github_com_cosmos_cosmos_sdk_types.Dec `protobuf:"bytes,4,opt,name=p30,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Dec" json:"p30"`
	// p14 defines avg Token Price of 14 days
	P14 github_com_cosmos_cosmos_sdk_types.Dec `protobuf:"bytes,5,opt,name=p14,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Dec" json:"p14"`
	// p7 defines avg Token Price of a week
	P7 github_com_cosmos_cosmos_sdk_types.Dec `protobuf:"bytes,6,opt,name=p7,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Dec" json:"p7"`
	// p1 defines avg Token Price of a day
	P1 github_com_cosmos_cosmos_sdk_types.Dec `protobuf:"bytes,7,opt,name=p1,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Dec" json:"p1"`
}

func (m *PriceStatistics) Reset()         { *m = PriceStatistics{} }
func (m *PriceStatistics) String() string { return proto.CompactTextString(m) }
func (*PriceStatistics) ProtoMessage()    {}
func (*PriceStatistics) Descriptor() ([]byte, []int) {
	return fileDescriptor_56729a312438cfdb, []int{0}
}
func (m *PriceStatistics) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PriceStatistics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PriceStatistics.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PriceStatistics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PriceStatistics.Merge(m, src)
}
func (m *PriceStatistics) XXX_Size() int {
	return m.Size()
}
func (m *PriceStatistics) XXX_DiscardUnknown() {
	xxx_messageInfo_PriceStatistics.DiscardUnknown(m)
}

var xxx_messageInfo_PriceStatistics proto.InternalMessageInfo

func init() {
	proto.RegisterType((*PriceStatistics)(nil), "cascadia.oracle.v1.PriceStatistics")
}

func init() {
	proto.RegisterFile("cascadia/oracle/v1/price_statistics.proto", fileDescriptor_56729a312438cfdb)
}

var fileDescriptor_56729a312438cfdb = []byte{
	// 286 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0xd2, 0x3d, 0x4e, 0xc3, 0x30,
	0x00, 0x05, 0xe0, 0xfc, 0x94, 0x22, 0xb2, 0x20, 0x45, 0x0c, 0x16, 0x83, 0x8b, 0x18, 0x10, 0x0c,
	0xf8, 0x47, 0x29, 0xb4, 0x2c, 0x08, 0x45, 0xec, 0x20, 0xd8, 0x58, 0x90, 0xeb, 0x84, 0x60, 0x41,
	0x6b, 0x2b, 0x76, 0x2b, 0xb8, 0x05, 0xc7, 0xea, 0xd8, 0x11, 0x31, 0x14, 0x94, 0x5c, 0x04, 0xc5,
	0x69, 0xab, 0xce, 0x9e, 0x6c, 0xd9, 0xef, 0x7d, 0xd3, 0x8b, 0xce, 0x38, 0xd3, 0x9c, 0x65, 0x82,
	0x61, 0x59, 0x32, 0xfe, 0x9e, 0xe3, 0x19, 0xc5, 0xaa, 0x14, 0x3c, 0x7f, 0xd6, 0x86, 0x19, 0xa1,
	0x8d, 0xe0, 0x1a, 0xa9, 0x52, 0x1a, 0x19, 0xc7, 0xeb, 0x28, 0x6a, 0xa3, 0x68, 0x46, 0x0f, 0x0f,
	0x0a, 0x59, 0x48, 0xfb, 0x8d, 0x9b, 0x5b, 0x9b, 0x3c, 0xfe, 0x0d, 0xa3, 0xfd, 0xfb, 0x06, 0x79,
	0xdc, 0x18, 0x71, 0x1a, 0x75, 0x54, 0x72, 0x49, 0x80, 0x7f, 0xe4, 0x9f, 0xee, 0xa5, 0x68, 0xbe,
	0xec, 0x79, 0x3f, 0xcb, 0xde, 0x49, 0x21, 0xcc, 0xeb, 0x74, 0x84, 0xb8, 0x1c, 0x63, 0x2e, 0xf5,
	0x58, 0xea, 0xd5, 0x71, 0xae, 0xb3, 0x37, 0x6c, 0x3e, 0x55, 0xae, 0xd1, 0x6d, 0xce, 0x1f, 0x6c,
	0xd7, 0x1a, 0x74, 0x48, 0x40, 0xe0, 0x68, 0xd0, 0x21, 0x89, 0x6f, 0xa2, 0x50, 0x5d, 0x11, 0x10,
	0x3a, 0x11, 0x4d, 0xd5, 0x0a, 0x09, 0x01, 0x1d, 0x47, 0x21, 0x69, 0x05, 0xda, 0x07, 0x3b, 0x8e,
	0x02, 0xed, 0xc7, 0xd7, 0x51, 0xa0, 0x06, 0xa0, 0xeb, 0x04, 0x04, 0x6a, 0x60, 0xfb, 0x14, 0xec,
	0x3a, 0xf6, 0x69, 0x7a, 0x37, 0xaf, 0xa0, 0xbf, 0xa8, 0xa0, 0xff, 0x57, 0x41, 0xff, 0xab, 0x86,
	0xde, 0xa2, 0x86, 0xde, 0x77, 0x0d, 0xbd, 0xa7, 0x8b, 0x6d, 0x65, 0x35, 0x98, 0x17, 0x39, 0x9d,
	0x64, 0xcc, 0x08, 0x39, 0xd9, 0x3c, 0xe1, 0x8f, 0xf5, 0xe0, 0x2c, 0x3c, 0xea, 0xda, 0xe5, 0x24,
	0xff, 0x01, 0x00, 0x00, 0xff, 0xff, 0x94, 0xc0, 0x17, 0x32, 0x90, 0x02, 0x00, 0x00,
}

func (m *PriceStatistics) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PriceStatistics) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PriceStatistics) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.P1.Size()
		i -= size
		if _, err := m.P1.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintPriceStatistics(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x3a
	{
		size := m.P7.Size()
		i -= size
		if _, err := m.P7.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintPriceStatistics(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x32
	{
		size := m.P14.Size()
		i -= size
		if _, err := m.P14.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintPriceStatistics(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x2a
	{
		size := m.P30.Size()
		i -= size
		if _, err := m.P30.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintPriceStatistics(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	{
		size := m.P90.Size()
		i -= size
		if _, err := m.P90.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintPriceStatistics(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	{
		size := m.P180.Size()
		i -= size
		if _, err := m.P180.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintPriceStatistics(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	{
		size := m.P360.Size()
		i -= size
		if _, err := m.P360.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintPriceStatistics(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintPriceStatistics(dAtA []byte, offset int, v uint64) int {
	offset -= sovPriceStatistics(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *PriceStatistics) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.P360.Size()
	n += 1 + l + sovPriceStatistics(uint64(l))
	l = m.P180.Size()
	n += 1 + l + sovPriceStatistics(uint64(l))
	l = m.P90.Size()
	n += 1 + l + sovPriceStatistics(uint64(l))
	l = m.P30.Size()
	n += 1 + l + sovPriceStatistics(uint64(l))
	l = m.P14.Size()
	n += 1 + l + sovPriceStatistics(uint64(l))
	l = m.P7.Size()
	n += 1 + l + sovPriceStatistics(uint64(l))
	l = m.P1.Size()
	n += 1 + l + sovPriceStatistics(uint64(l))
	return n
}

func sovPriceStatistics(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPriceStatistics(x uint64) (n int) {
	return sovPriceStatistics(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *PriceStatistics) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPriceStatistics
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PriceStatistics: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PriceStatistics: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field P360", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPriceStatistics
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPriceStatistics
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPriceStatistics
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.P360.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field P180", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPriceStatistics
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPriceStatistics
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPriceStatistics
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.P180.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field P90", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPriceStatistics
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPriceStatistics
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPriceStatistics
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.P90.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field P30", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPriceStatistics
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPriceStatistics
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPriceStatistics
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.P30.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field P14", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPriceStatistics
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPriceStatistics
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPriceStatistics
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.P14.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field P7", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPriceStatistics
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPriceStatistics
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPriceStatistics
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.P7.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field P1", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPriceStatistics
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPriceStatistics
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPriceStatistics
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.P1.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPriceStatistics(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPriceStatistics
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPriceStatistics(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPriceStatistics
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPriceStatistics
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPriceStatistics
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPriceStatistics
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupPriceStatistics
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthPriceStatistics
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthPriceStatistics        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPriceStatistics          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupPriceStatistics = fmt.Errorf("proto: unexpected end of group")
)
